// GESTION DES PÉNALITÉS AVEC RÉDUCTIONS
Table penalite {
  id_penalite integer [primary key, increment]
  numero_penalite varchar(20) [not null, unique]
  id_adherent integer [not null]
  id_pret integer [not null]
  montant decimal(10,2) [not null]
  motif varchar(200) [not null]
  date_creation date [default: `CURRENT_DATE`]
  date_paiement date
  statut enum('impayee', 'payee', 'annulee') [default: 'impayee']
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
}
  
  // TABLES DE RÉFÉRENCE SIMPLIFIÉES
Table langue {
  id_langue integer [primary key, increment]
  code_langue varchar(3) [not null, unique]
  nom_langue varchar(50) [not null]
}

Table genre {
  id_genre integer [primary key, increment]
  nom_genre varchar(50) [not null, unique]
  description text
}

Table editeur {
  id_editeur integer [primary key, increment]
  nom_editeur varchar(100) [not null, unique]
  pays varchar(50) [not null]
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
}

// SYSTÈME D'ABONNEMENT AVEC PRIVILÈGES
Table abonnement {
  id_abonnement integer [primary key, increment]
  nom_abonnement varchar(50) [not null, unique]
  niveau enum('gratuit', 'basique', 'premium') [not null]
  duree_mois integer [not null]
  prix decimal(10,2) [not null]
  nombre_emprunts_max integer [not null]
  duree_emprunt_jours integer [not null]
  priorite_reservation integer [default: 1] // 1=normale, 2=élevée, 3=maximale
  prolongations_autorisees integer [default: 1]
  reduction_penalite decimal(5,2) [default: 0.00] // % de réduction
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
}

Table privilege {
  id_privilege integer [primary key, increment]
  code_privilege varchar(50) [not null, unique]
  nom_privilege varchar(100) [not null]
  description text [not null]
  categorie enum('emprunt', 'reservation', 'penalite', 'acces') [not null]
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
}

Table abonnement_privilege {
  id_abonnement integer [not null]
  id_privilege integer [not null]
  valeur_privilege varchar(100) // Valeur spécifique du privilège
  actif boolean [default: true]
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
}

Table adherent_abonnement {
  id_adherent_abonnement integer [primary key, increment]
  id_adherent integer [not null]
  id_abonnement integer [not null]
  date_debut date [not null]
  date_fin date [not null]
  statut enum('actif', 'expire') [default: 'actif']
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
}

// GESTION DES UTILISATEURS SIMPLIFIÉE
Table adherent {
  id_adherent integer [primary key, increment]
  numero_adherent varchar(20) [not null, unique]
  nom varchar(50) [not null]
  prenom varchar(50) [not null]
  email varchar(100) [not null, unique]
  telephone varchar(15) [not null]
  adresse varchar(200) [not null]
  ville varchar(50) [not null]
  code_postal varchar(10) [not null]
  date_inscription date [default: `CURRENT_DATE`]
  date_expiration_adhesion date [not null]
  statut enum('actif', 'suspendu', 'expire') [default: 'actif']
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
}

Table utilisateur {
  id_utilisateur integer [primary key, increment]
  username varchar(50) [not null, unique]
  password_hash varchar(255) [not null]
  email varchar(100) [not null, unique]
  nom varchar(50) [not null]
  prenom varchar(50) [not null]
  role enum('admin', 'bibliothecaire', 'adherent') [not null]
  id_adherent integer
  actif boolean [default: true]
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
}

// GESTION DES LIVRES SIMPLIFIÉE
Table auteur {
  id_auteur integer [primary key, increment]
  nom varchar(50) [not null]
  prenom varchar(50) [not null]
  nationalite varchar(50)
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
}

Table emplacement {
  id_emplacement integer [primary key, increment]
  code_emplacement varchar(20) [not null, unique]
  description varchar(100) [not null]
  section varchar(50) [not null]
}

Table livre {
  id_livre integer [primary key, increment]
  isbn varchar(13) [unique]
  titre varchar(200) [not null]
  id_editeur integer [not null]
  id_langue integer [not null]
  id_genre integer [not null]
  id_emplacement integer [not null]
  annee_publication year [not null]
  nombre_exemplaires integer [not null, default: 1]
  nombre_disponibles integer [not null, default: 1]
  prix_remplacement decimal(10,2) [default: 20.00]
  date_acquisition date [default: `CURRENT_DATE`]
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
}

Table livre_auteur {
  id_livre integer [not null]
  id_auteur integer [not null]
  role_auteur enum('auteur_principal', 'co_auteur', 'traducteur') [default: 'auteur_principal']
}

Table exemplaire {
  id_exemplaire integer [primary key, increment]
  id_livre integer [not null]
  code_barre varchar(50) [not null, unique]
  numero_exemplaire integer [not null]
  etat enum('bon', 'moyen', 'mauvais', 'perdu') [default: 'bon']
  disponible boolean [default: true]
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
}

// GESTION DES PRÊTS SIMPLIFIÉE
Table pret {
  id_pret integer [primary key, increment]
  numero_pret varchar(20) [not null, unique]
  id_adherent integer [not null]
  id_exemplaire integer [not null]
  id_bibliothecaire integer [not null]
  date_pret date [default: `CURRENT_DATE`]
  date_retour_prevue date [not null]
  date_retour_effective date
  statut enum('en_cours', 'rendu', 'en_retard', 'perdu') [default: 'en_cours']
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
}

Table prolongation_pret {
  id_prolongation integer [primary key, increment]
  id_pret integer [not null]
  date_demande date [default: `CURRENT_DATE`]
  nouvelle_date_retour date [not null]
  statut enum('acceptee', 'refusee') [not null]
  id_bibliothecaire integer [not null]
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
}

// GESTION DES RÉSERVATIONS AVEC PRIORITÉ
Table reservation {
  id_reservation integer [primary key, increment]
  numero_reservation varchar(20) [not null, unique]
  id_adherent integer [not null]
  id_livre integer [not null]
  date_reservation timestamp [default: `CURRENT_TIMESTAMP`]
  date_expiration date [not null]
  priorite integer [default: 1] // Basé sur le niveau d'abonnement
  position_file integer [not null] // Position dans la file d'attente
  date_notification timestamp // Quand l'adhérent a été notifié
  statut enum('en_attente', 'notifie', 'satisfaite', 'annulee', 'expiree') [default: 'en_attente']
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`]
}

// GESTION DES PÉNALITÉS AVEC RÉDUCTIONS
Table penalite {
  id_penalite integer [primary key, increment]
  numero_penalite varchar(20) [not null, unique]
  id_adherent integer [not null]
  id_pret integer [not null]
  montant_base decimal(10,2) [not null] // Montant avant réduction
  reduction_appliquee decimal(5,2) [default: 0.00] // % de réduction appliqué
  montant_final decimal(10,2) [not null] // Montant après réduction
  motif varchar(200) [not null]
  date_creation date [default: `CURRENT_DATE`]
  date_paiement date
  statut enum('impayee', 'payee', 'annulee') [default: 'impayee']
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
}

// AUDIT ET LOGS SIMPLIFIÉS
Table log_activite {
  id_log integer [primary key, increment]
  id_utilisateur integer [not null]
  action varchar(100) [not null]
  table_concernee varchar(50) [not null]
  date_action timestamp [default: `CURRENT_TIMESTAMP`]
}

// RELATIONS
Ref: adherent.id_adherent < adherent_abonnement.id_adherent
Ref: abonnement.id_abonnement < adherent_abonnement.id_abonnement
Ref: abonnement.id_abonnement < abonnement_privilege.id_abonnement
Ref: privilege.id_privilege < abonnement_privilege.id_privilege
Ref: adherent.id_adherent < utilisateur.id_adherent
Ref: langue.id_langue < livre.id_langue
Ref: genre.id_genre < livre.id_genre
Ref: editeur.id_editeur < livre.id_editeur
Ref: emplacement.id_emplacement < livre.id_emplacement
Ref: livre.id_livre < livre_auteur.id_livre
Ref: auteur.id_auteur < livre_auteur.id_auteur
Ref: livre.id_livre < exemplaire.id_livre
Ref: adherent.id_adherent < pret.id_adherent
Ref: exemplaire.id_exemplaire < pret.id_exemplaire
Ref: utilisateur.id_utilisateur < pret.id_bibliothecaire
Ref: pret.id_pret < prolongation_pret.id_pret
Ref: utilisateur.id_utilisateur < prolongation_pret.id_bibliothecaire
Ref: adherent.id_adherent < reservation.id_adherent
Ref: livre.id_livre < reservation.id_livre
Ref: adherent.id_adherent < penalite.id_adherent
Ref: pret.id_pret < penalite.id_pret
Ref: utilisateur.id_utilisateur < log_activite.id_utilisateur

/*
EXEMPLES DE DONNÉES POUR LE SYSTÈME DE PRIVILÈGES :

-- Privilèges disponibles
INSERT INTO privilege VALUES
(1, 'RESERVATION_PRIORITAIRE', 'Réservation prioritaire', 'Réservation traitée en priorité', 'reservation'),
(2, 'PROLONGATION_MULTIPLE', 'Prolongations multiples', 'Possibilité de prolonger plusieurs fois', 'emprunt'),
(3, 'REDUCTION_PENALITE_50', 'Réduction pénalité 50%', 'Réduction de 50% sur les pénalités', 'penalite'),
(4, 'EMPRUNT_LONGUE_DUREE', 'Emprunt longue durée', 'Durée d\'emprunt étendue', 'emprunt');

-- Configuration des abonnements
INSERT INTO abonnement VALUES
(1, 'Gratuit', 'gratuit', 12, 0.00, 2, 14, 1, 0, 0.00),
(2, 'Basique', 'basique', 12, 25.00, 5, 21, 2, 1, 10.00),
(3, 'Premium', 'premium', 12, 50.00, 10, 30, 3, 3, 50.00);

-- Association privilèges-abonnements
INSERT INTO abonnement_privilege VALUES
-- Abonnement Basique
(2, 2, '2 prolongations', true), -- 2 prolongations max
(2, 3, '10%', true),             -- 10% de réduction pénalités

-- Abonnement Premium  
(3, 1, 'priorite_max', true),    -- Priorité maximale réservations
(3, 2, '3 prolongations', true), -- 3 prolongations max
(3, 3, '50%', true),             -- 50% de réduction pénalités
(3, 4, '30 jours', true);        -- 30 jours d'emprunt

REQUÊTES UTILES :

-- Obtenir les privilèges d'un adhérent
SELECT p.nom_privilege, p.description, ap.valeur_privilege
FROM adherent a
JOIN adherent_abonnement aa ON a.id_adherent = aa.id_adherent
JOIN abonnement ab ON aa.id_abonnement = ab.id_abonnement  
JOIN abonnement_privilege ap ON ab.id_abonnement = ap.id_abonnement
JOIN privilege p ON ap.id_privilege = p.id_privilege
WHERE a.id_adherent = ? AND aa.statut = 'actif' AND ap.actif = true;

-- File d'attente des réservations avec priorité
SELECT r.*, a.nom, a.prenom, ab.niveau, ab.priorite_reservation,
       ROW_NUMBER() OVER (
         PARTITION BY r.id_livre 
         ORDER BY ab.priorite_reservation DESC, r.date_reservation ASC
       ) as position_finale
FROM reservation r
JOIN adherent a ON r.id_adherent = a.id_adherent
JOIN adherent_abonnement aa ON a.id_adherent = aa.id_adherent
JOIN abonnement ab ON aa.id_abonnement = ab.id_abonnement
WHERE r.statut = 'en_attente' AND aa.statut = 'actif'
ORDER BY r.id_livre, position_finale;

-- Calcul automatique des pénalités avec réduction
SELECT p.*, 
       (p.montant_base * (100 - ab.reduction_penalite) / 100) as montant_avec_reduction
FROM penalite p
JOIN adherent a ON p.id_adherent = a.id_adherent
JOIN adherent_abonnement aa ON a.id_adherent = aa.id_adherent
JOIN abonnement ab ON aa.id_abonnement = ab.id_abonnement
WHERE aa.statut = 'actif';
*/